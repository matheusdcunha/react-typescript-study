/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './views/__root'
import { Route as PublicLayoutRouteImport } from './views/_public/layout'
import { Route as PublicIndexRouteImport } from './views/_public/index'
import { Route as PublicSignInRouteImport } from './views/_public/sign-in'
import { Route as PublicForgotPasswordRouteImport } from './views/_public/forgot-password'

const PublicLayoutRoute = PublicLayoutRouteImport.update({
  id: '/_public',
  getParentRoute: () => rootRouteImport,
} as any)
const PublicIndexRoute = PublicIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PublicLayoutRoute,
} as any)
const PublicSignInRoute = PublicSignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => PublicLayoutRoute,
} as any)
const PublicForgotPasswordRoute = PublicForgotPasswordRouteImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => PublicLayoutRoute,
} as any)

export interface FileRoutesByFullPath {
  '/forgot-password': typeof PublicForgotPasswordRoute
  '/sign-in': typeof PublicSignInRoute
  '/': typeof PublicIndexRoute
}
export interface FileRoutesByTo {
  '/forgot-password': typeof PublicForgotPasswordRoute
  '/sign-in': typeof PublicSignInRoute
  '/': typeof PublicIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_public': typeof PublicLayoutRouteWithChildren
  '/_public/forgot-password': typeof PublicForgotPasswordRoute
  '/_public/sign-in': typeof PublicSignInRoute
  '/_public/': typeof PublicIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/forgot-password' | '/sign-in' | '/'
  fileRoutesByTo: FileRoutesByTo
  to: '/forgot-password' | '/sign-in' | '/'
  id:
    | '__root__'
    | '/_public'
    | '/_public/forgot-password'
    | '/_public/sign-in'
    | '/_public/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  PublicLayoutRoute: typeof PublicLayoutRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_public': {
      id: '/_public'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PublicLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_public/': {
      id: '/_public/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof PublicIndexRouteImport
      parentRoute: typeof PublicLayoutRoute
    }
    '/_public/sign-in': {
      id: '/_public/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof PublicSignInRouteImport
      parentRoute: typeof PublicLayoutRoute
    }
    '/_public/forgot-password': {
      id: '/_public/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof PublicForgotPasswordRouteImport
      parentRoute: typeof PublicLayoutRoute
    }
  }
}

interface PublicLayoutRouteChildren {
  PublicForgotPasswordRoute: typeof PublicForgotPasswordRoute
  PublicSignInRoute: typeof PublicSignInRoute
  PublicIndexRoute: typeof PublicIndexRoute
}

const PublicLayoutRouteChildren: PublicLayoutRouteChildren = {
  PublicForgotPasswordRoute: PublicForgotPasswordRoute,
  PublicSignInRoute: PublicSignInRoute,
  PublicIndexRoute: PublicIndexRoute,
}

const PublicLayoutRouteWithChildren = PublicLayoutRoute._addFileChildren(
  PublicLayoutRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  PublicLayoutRoute: PublicLayoutRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
